import java.util.*;

class Stock {
    String symbol;
    String name;
    double price;

    public Stock(String symbol, String name, double price) {
        this.symbol = symbol;
        this.name = name;
        this.price = price;
    }

    public String toString() {
        return symbol + " (" + name + "): $" + price;
    }
}

class User {
    String username;
    Map<String, Integer> portfolio = new HashMap<>(); // symbol -> shares
    double cash;

    public User(String username, double startingCash) {
        this.username = username;
        this.cash = startingCash;
    }

    public void buyStock(Stock stock, int quantity) {
        double total = stock.price * quantity;
        if (cash >= total) {
            portfolio.put(stock.symbol, portfolio.getOrDefault(stock.symbol, 0) + quantity);
            cash -= total;
            System.out.println("Bought " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("Insufficient funds.");
        }
    }

    public void sellStock(Stock stock, int quantity) {
        int owned = portfolio.getOrDefault(stock.symbol, 0);
        if (owned >= quantity) {
            portfolio.put(stock.symbol, owned - quantity);
            cash += stock.price * quantity;
            System.out.println("Sold " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("Not enough shares to sell.");
        }
    }

    public void showPortfolio(Map<String, Stock> market) {
        System.out.println("\n--- Portfolio of " + username + " ---");
        for (Map.Entry<String, Integer> entry : portfolio.entrySet()) {
            String symbol = entry.getKey();
            int shares = entry.getValue();
            Stock stock = market.get(symbol);
            double value = shares * stock.price;
            System.out.printf("%s: %d shares ($%.2f)\n", symbol, shares, value);
        }
        System.out.printf("Cash balance: $%.2f\n", cash);
    }
}

public class StockTradingPlatform {
    private static Map<String, Stock> market = new HashMap<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        initializeMarket();
        User user = new User("TraderJoe", 10000.0);

        while (true) {
            System.out.println("\n1. View Market\n2. Buy Stock\n3. Sell Stock\n4. View Portfolio\n5. Exit");
            System.out.print("Choose an option: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1 -> displayMarket();
                case 2 -> performBuy(user);
                case 3 -> performSell(user);
                case 4 -> user.showPortfolio(market);
                case 5 -> {
                    System.out.println("Goodbye!");
                    return;
                }
                default -> System.out.println("Invalid choice.");
            }
        }
    }

    private static void initializeMarket() {
        market.put("AAPL", new Stock("AAPL", "Apple Inc.", 172.30));
        market.put("GOOG", new Stock("GOOG", "Alphabet Inc.", 2835.00));
        market.put("TSLA", new Stock("TSLA", "Tesla Inc.", 700.00));
        market.put("AMZN", new Stock("AMZN", "Amazon.com Inc.", 3300.00));
    }

    private static void displayMarket() {
        System.out.println("\n--- Market Data ---");
        for (Stock stock : market.values()) {
            System.out.println(stock);
        }
    }

    private static void performBuy(User user) {
        System.out.print("Enter stock symbol to buy: ");
        String symbol = scanner.nextLine().toUpperCase();
        Stock stock = market.get(symbol);
        if (stock == null) {
            System.out.println("Stock not found.");
            return;
        }
        System.out.print("Enter quantity: ");
        int quantity = Integer.parseInt(scanner.nextLine());
        user.buyStock(stock, quantity);
    }

    private static void performSell(User user) {
        System.out.print("Enter stock symbol to sell: ");
        String symbol = scanner.nextLine().toUpperCase();
        Stock stock = market.get(symbol);
        if (stock == null) {
            System.out.println("Stock not found.");
            return;
        }
        System.out.print("Enter quantity: ");
        int quantity = Integer.parseInt(scanner.nextLine());
        user.sellStock(stock, quantity);
    }
}
